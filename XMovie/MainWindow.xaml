<metro:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:XMovie"
        xmlns:common="clr-namespace:XMovie.Common"
        xmlns:behaviors="clr-namespace:XMovie.Common.Behaviors"
        xmlns:controls="clr-namespace:XMovie.Controls"
        xmlns:vm="clr-namespace:XMovie.ViewModels"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="XMovie.MainWindow"
        mc:Ignorable="d"
        ResizeMode="CanResizeWithGrip"
        WindowState="{Binding Settings.MainWindowState, Mode=TwoWay}"
        Height="{Binding Settings.MainWindowHeight, Mode=TwoWay}"
        Width="{Binding Settings.MainWindowWidth, Mode=TwoWay}"
        Top="{Binding Settings.MainWindowTop, Mode=TwoWay}"
        Left="{Binding Settings.MainWindowLeft, Mode=TwoWay}"
        x:Name="XMovieWindow"
        Title="XMovie"
       >

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <ic:CallMethodAction TargetObject="{Binding}" MethodName="MainWindowLoaded" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl x:Name="CommonFlyout">
            <metro:Flyout Header="Tool" Position="Right" Width="350" IsOpen="{Binding ToolModel.IsOpenFlyout}" IsModal="True">
                <Border Padding="10">
                    <Grid>
                        <Grid.RowDefinitions >
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TabControl>
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                    <Setter Property="metro:ControlsHelper.HeaderFontSize" Value="14" />
                                </Style>
                            </TabControl.Resources>


                            <TabItem Header="Tool">
                                <StackPanel Orientation="Vertical">
                                    <Button BorderThickness="1" Command="{Binding RemoveUnusedTagCommand}" Content="未使用タグの削除"/>
                                </StackPanel>
                            </TabItem>

                            <TabItem Header="監視ディレクトリ">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ScrollViewer VerticalScrollBarVisibility="Visible">
                                        <ItemsControl ItemsSource="{Binding ToolModel.DirectoryMonitors}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <controls:DirectoryMonitorSettingControl />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem Header="動画拡張子">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <controls:FileExtensionSettingControl DataContext="{Binding ToolModel}" />
                                </ScrollViewer>
                            </TabItem>
                        </TabControl>
                        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right" x:Name="SettingButtons">
                            <Button Width="60" Margin="5"
                                Command="{Binding ToolModel.CommitCommand}" Content="OK"/>
                            <Button Width="60" Margin="5"
                                Command="{Binding ToolModel.RollbackCommand}" Content="Cancel"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </metro:Flyout>
        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>

    <Grid>
        <Grid.Resources>
            <GridLengthConverter x:Key="GridLengthConverter" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />

        </Grid.RowDefinitions>

        <!-- 2.Search Menu -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" >
                <TextBlock Margin="10,10,0,10" VerticalAlignment="Center"><Run Text="Search:"/></TextBlock>
                <ComboBox Margin="10,10,0,10" Width="250" IsEditable="True" 
                          metro:TextBoxHelper.Watermark="Search"
                          Text="{Binding SearchKeywords}"
                          ItemsSource="{Binding Settings.SearchHistories}"
                          metro:TextBoxHelper.ClearTextButton="True"
                          x:Name="SearchComboBox"
                          >
                    <ComboBox.InputBindings>
                        <KeyBinding Command="{Binding SearchCommand}"
                                    Key="Return"
                                    CommandParameter="{Binding Text, ElementName=SearchComboBox}" />
                    </ComboBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownClosed">
                            <i:InvokeCommandAction Command="{Binding SearchCommand}"
                                                   CommandParameter="{Binding Text, ElementName=SearchComboBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Width="28" Height="28"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding SearchCommand}"
                        CommandParameter="{Binding Text, ElementName=SearchComboBox}"
                        >
                    <Rectangle Width="18" Height="18" Fill="White">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_magnify_browse}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Width="28" Height="28" Margin="5,0,10,0"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        x:Name="TagButton"
                        >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ic:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=TagButton}"
                                                     PropertyName="IsOpen"
                                                     Value="True" />
                            <ic:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=TagButton}"
                                                     PropertyName="PlacementTarget"
                                                     Value="{Binding ElementName=TagButton, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Rectangle Width="12" Height="12" Fill="White">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_tag_label}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button.ContextMenu>
                        <ContextMenu ItemsSource="{Binding SearchTags}">
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Header" Value="{Binding Header}" />
                                    <Setter Property="Padding" Value="0,5,0,0" />
                                    <Setter Property="Height" Value="30" />
                                    <Setter Property="ItemsSource" Value="{Binding MenuItems}"/>
                                    <Setter Property="Command" Value="{Binding DataContext.TagSearchCommand, RelativeSource={RelativeSource AncestorType={x:Type metro:MetroWindow}}}" />
                                    <Setter Property="CommandParameter" Value="{Binding Header}" />
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>

                <metro:ProgressRing IsActive="{Binding IsSearching}" Foreground="AntiqueWhite"
                                    Width="30" Height="30" Margin="0,0,10,0"/>

                <metro:ToggleSwitch VerticalAlignment="Center" OnLabel="File search" OffLabel="Tag search"
                                    Width="130"
                                    FontStyle="Normal" FontSize="12" FontFamily="Yu Gothic UI"
                                    IsChecked="{Binding IsFileSearch, Mode=TwoWay}" />

                <TextBlock Margin="10,10,0,10" VerticalAlignment="Center"><Run Text="Sort Order:"/></TextBlock>
                <ComboBox ItemsSource="{Binding Sorter}" SelectedIndex="{Binding Settings.SorterIndex}"
                          Width="160" Margin="10">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownClosed">
                            <i:InvokeCommandAction Command="{Binding SearchCommand}"
                                                   CommandParameter="{Binding Text, ElementName=SearchComboBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ComboBox>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <ResourceDictionary>
                        <VisualBrush x:Key="ThumbnailCountImage" Visual="{StaticResource appbar_list}" />
                    </ResourceDictionary>
                </StackPanel.Resources>
                <metro:SplitButton Height="30"
                                   ItemsSource="{Binding ThumbnailCountList}"
                                   SelectedIndex="{Binding ThumbnailCountListIndex}">
                    <metro:SplitButton.Icon>
                        <Rectangle Width="15" Height="15" Margin="5" Fill="{StaticResource ThumbnailCountImage}" />
                    </metro:SplitButton.Icon>
                </metro:SplitButton>
                <Button Width="30" Height="30" Margin="10,0,10,0" Padding="0" BorderThickness="0"
                        HorizontalAlignment="Right"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding ToolModel.ToolCommand}"
                        >
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.Fill>
                    </Rectangle>

                </Button>

            </StackPanel>
        </Grid>

        <!-- 3.Separator -->
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="Gray" Height="1" Margin="10,0"/>

        <!-- 4.Main -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding Settings.InfoColumnWidth, Mode=TwoWay}" MinWidth="50"/>
            </Grid.ColumnDefinitions>

            <!-- -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="300*" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{Binding Settings.LogRowHeight, Mode=TwoWay}" MinHeight="50" />
                </Grid.RowDefinitions>

                <!-- Movie ListBox -->
                <ListBox Grid.Row="0" Grid.Column="0" AllowDrop="True" ItemsSource="{Binding Movies}"
                         SelectionMode="Extended"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.ScrollUnit="Item"
                         VirtualizingPanel.VirtualizationMode="Recycling"
                         VirtualizingPanel.IsContainerVirtualizable="True"
                         Padding="0"
                         Margin="0"
                         >

                    <i:Interaction.Behaviors>
                        <behaviors:FileDropBehavior DropCommand="{Binding FileDropCommand}"/>
                        <behaviors:ListBoxSelectedMovieItemsBehavior SelectedItems="{Binding MovieInformation.SelectedMovies, Mode=OneWayToSource}" />
                    </i:Interaction.Behaviors>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <controls:MovieItemControl />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--
                            <VirtualizingStackPanel Orientation="Vertical"  />
                            -->
                            <WrapPanel Orientation="Horizontal" Margin="0" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>

                <!-- Separator -->
                <GridSplitter Grid.Row="1" Width="Auto" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                <!-- Logs -->
                <Grid Grid.Row="2" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListView ItemsSource="{Binding Logs.LogRecords}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <ic:CallMethodAction TargetObject="{Binding}" MethodName="LogViewLoaded" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <behaviors:ScrollIntoViewBehavior />
                            </i:Interaction.Behaviors>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border BorderBrush="Transparent"
                                                        BorderThickness="0"
                                                        Background="{TemplateBinding Background}">
                                                    <GridViewRowPresenter HorizontalAlignment="Stretch"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Width="Auto" 
                                                                          Margin="0"
                                                                          Content="{TemplateBinding Content}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ToolTip" Value="{Binding Message}" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Level}" Value="{x:Static common:LogLevel.Error}">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Level}" Value="{x:Static common:LogLevel.Warning}">
                                            <Setter Property="Background" Value="#CA5100" />
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Foreground" Value="#DFDFDF" />
                                            <Setter Property="Background" Value="#576573" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="Gray" />
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Lv" Width="30">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding LevelString}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Time" Width="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Time, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="1000">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding MessageSummary}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <CheckBox Grid.Column="0" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                      FontSize="10" Width="60" Content="DEBUG"
                                      IsChecked="{Binding Logs.IsEnableDebugLog}"
                                      />
                            <CheckBox Grid.Column="1" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                      FontSize="10" Width="60" Content="INFO"
                                      IsChecked="{Binding Logs.IsEnableInfoLog}"
                                      />
                            <CheckBox Grid.Column="2" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                      FontSize="10" Width="60" Content="WARN"
                                      IsChecked="{Binding Logs.IsEnableWarningLog}"
                                      />
                            <CheckBox Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                      FontSize="10" Width="60" Content="ERROR"
                                      IsChecked="{Binding Logs.IsEnableErrorLog}"
                                      />
                            <Border Width="1" BorderThickness="1" BorderBrush="Gray" Margin="5"/>
                            <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    HorizontalAlignment="Left"
                                    Margin="0,0,10,0"
                                    Command="{Binding Logs.ClearLogCommand}"
                                    >
                                <Rectangle Width="18" Height="18" Fill="White">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_list_delete_inline}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Button.ToolTip>ログのクリア</Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>

            </Grid>

            <!-- Separator -->
            <GridSplitter Grid.Column="1" Width="5" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

            <!-- Tags -->
            <Grid Grid.Column="2" Grid.RowSpan="2">
                <controls:MovieInformationControl DataContext="{Binding MovieInformation}"/>
            </Grid>
        </Grid>

        <!-- 5. StatusBar -->
        <Grid Grid.Row="3" Height="20">
            <StatusBar>
                <StatusBarItem Content="{Binding Logs.LastLogSummary}" />
            </StatusBar>
        </Grid>
    </Grid>
</metro:MetroWindow>
